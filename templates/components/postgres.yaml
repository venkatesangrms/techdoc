apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    db: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    db: postgres
spec:
  selector:
    matchLabels:
      db: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        db: postgres
    spec:
      containers:
      - image: {{ .Values.image.POSTGRES }}
        name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: password
        ports:
        - containerPort: 5432
          name: postgres-port
        volumeMounts:
        - name: postgres-persistent-volume
          mountPath: /var/lib/postgresql/data
        - name: postgres-persistent-volume
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "3Gi"
            cpu: "500m"
          limits:
            memory: "5Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-persistent-volume
        persistentVolumeClaim:
          claimName: postgres-persistent-volume-claim
      initContainers:
      - name: postgres-data-init
        image: {{ .Values.image.POSTGRES_INIT }} 
        volumeMounts:
        - name: postgres-persistent-volume
          mountPath: /docker-entrypoint-initdb.d
